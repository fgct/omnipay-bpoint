<?php

namespace Omnipay\Bpoint\Message;

class ResultKeyResponse extends AbstractResponse
{
    /**
     * @return bool
     */
    public function isSuccessful()
    {
        if (!parent::isSuccessful()) {
            return false;
        }

        return true;
    }

    /**
     * Get the error message from the response.
     *
     * Returns null if the request was successful.
     *
     * @link https://www.bpoint.com.au/developers/v3/index.htm#!#txnResponses
     *
     * @return string|null
     */
    public function getMessage()
    {
        if (!parent::isSuccessful() && isset($this->data['APIResponse']) && isset($this->data['APIResponse']['ResponseText'])) {
            return $this->data['APIResponse']['ResponseText'];
        }

        if (!$this->isSuccessful()) {
            if (isset($this->data['ErrorString'])) {
                return $this->data['ErrorString'];
            }
            if (isset($this->data['TxnResp']['ResponseCode'], $this->data['TxnResp']['ResponseText'])) {
                $responseCode = $this->data['TxnResp']['ResponseCode'];
                $responseText = $this->data['TxnResp']['ResponseText'];

                // Transaction response codes 1-5 will use the bank response code and message
                if ($responseCode == '1' || $responseCode == '2' || $responseCode == '3' || $responseCode == '4' || $responseCode == '5') {
                    $bankResponseCode = $this->data['TxnResp']['BankResponseCode'];
                    $fullErrorMessage = isset(self::BANK_CODE_MESSAGES[$bankResponseCode]) ? self::BANK_CODE_MESSAGES[$bankResponseCode] : null;
                } else {
                    $fullErrorMessage = isset(self::API_CODE_MESSAGES[$responseCode]) ? self::API_CODE_MESSAGES[$responseCode] : 'Response Unknown';
                }

                // e.g. "Declined (Restricted card)."
                return $responseText . ($fullErrorMessage ? ' (' . $fullErrorMessage . ')' : '') . '.';
            }
        }

        return null;
    }

    /**
     * Get the error code from the response.
     *
     * Transaction responses 1-5 will return the two digit bank response code e.g. "38" (Allowable PIN tries exceeded).
     * All other error responses will return the BPoint error code.
     *
     * @link https://www.bpoint.com.au/developers/v3/index.htm#!#txnResponses
     *
     * Returns null if the request was successful.
     *
     * @return string|null
     */
    public function getCode()
    {
        if (!parent::isSuccessful() && isset($this->data['APIResponse']) && isset($this->data['APIResponse']['ResponseCode'])) {
            return $this->data['APIResponse']['ResponseCode'];
        }

        if (!$this->isSuccessful()) {
            if (isset($this->data['ErrorCode'])) {
                return $this->data['ErrorCode'];
            }
            if (isset($this->data['TxnResp']['ResponseCode'], $this->data['TxnResp']['ResponseText'])) {
                $responseCode = $this->data['TxnResp']['ResponseCode'];

                // Transaction response codes 1-5 will use the bank response code and message
                if ($responseCode == '1' || $responseCode == '2' || $responseCode == '3' || $responseCode == '4' || $responseCode == '5') {
                    $bankResponseCode = $this->data['TxnResp']['BankResponseCode'];
                    return $bankResponseCode;
                }

                return $responseCode;
            }
        }

        return null;
    }

    /**
     * Gateway Reference
     *
     * @return null|string A reference provided by the gateway to represent this transaction
     */
    public function getTransactionReference()
    {
        if (isset($this->data['TxnResp']['TxnNumber'])) {
            return $this->data['TxnResp']['TxnNumber'];
        }
    }

    /**
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return null;
    }
}